@model PaymentSchduler.ViewModels.PaymentScheduleViewModel




<h2> Payment Schedule </h2>

<div class="topPanel">

    <div class="leftPanel">


        @using (Html.BeginForm("Create", "Home"))
        {

            <p class="alert alert-info"> Vehicle Price, Deposit Amount, Financial Option, and Delivery Date fields are <strong>required. </strong> </p>

            <div class="form-group">
                @Html.LabelFor(m => m.VehiclePrice)
                @Html.TextBoxFor(m => m.VehiclePrice, new { @class = "form-control", autofocus = "autofocus" })
                @Html.ValidationMessageFor(m => m.VehiclePrice)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.DepositAmount)
                @Html.TextBoxFor(m => m.DepositAmount, new { @class = "form-control", placeholder = "eg 300" })
                @Html.ValidationMessageFor(m => m.DepositAmount)
                @if (ViewBag.Message != null)
                {
                <span>@ViewBag.Message</span>
                }

            </div>


            <div class="form-group">

                @Html.LabelFor(m => m.FinanceOption)

                @{
                    var listItems = new List<int> { 1, 2, 3 };
                }

                @Html.DropDownListFor(m => m.FinanceOption, new SelectList(listItems), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FinanceOption)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DeliveryDate)
                @Html.EditorFor(m => m.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.DeliveryDate)
            </div>



            <div class="form-group">
                @Html.LabelFor(m => m.DepositPercentage)
                @Html.EditorFor(m => m.DepositPercentage, new { htmlAttributes = new { @class = "form-control", placeholder = "eg 15" } })
            </div>


            <div class="form-group">
                @Html.LabelFor(m => m.FirstMonthArrangementFee)
                @Html.EditorFor(m => m.FirstMonthArrangementFee, new { htmlAttributes = new { @class = "form-control", placeholder = "eg 88" } })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.FinalMonthArrangementFee)
                @Html.EditorFor(m => m.FinalMonthArrangementFee, new { htmlAttributes = new { @class = "form-control", placeholder = "eg 20" } })
            </div>


            <button type="submit" class="btn btn-primary btn-lg">Submit</button>



                    }
    </div>

    <div class="rightPanel">


        @if (Model != null)
        {

            <h2 class="loan"> Loan Summary </h2>
            <hr>

            <div class="summary">

                <div class="summary-group">
                    <p>@Html.LabelFor(m => m.VehiclePrice) : £ @Html.DisplayFor(m => m.VehiclePrice) </p>

                </div>
                <div class="summary-group">
                    <p> @Html.LabelFor(m => m.DepositAmount) : £ @Html.DisplayFor(m => m.DepositAmount)</p>
                </div>

                <div class="summary-group">
                    <p> @Html.LabelFor(m => m.DeliveryDate): @Html.DisplayFor(m => m.DeliveryDate)</p>
                </div>

                <div class="summary-group">
                    <p> @Html.LabelFor(m => m.FinanceOption): @Html.DisplayFor(m => m.FinanceOption)</p>
                </div>

                <div class="summary-group">
                    <p> @Html.LabelFor(m => m.DepositPercentage) :    @Html.DisplayFor(m => m.DepositPercentage) </p>

                </div>

                <div class="summary-group">
                    <p> @Html.LabelFor(m => m.FirstMonthArrangementFee) : @Html.DisplayFor(m => m.FirstMonthArrangementFee)</p>

                </div>

                <div class="summary-group">
                    <p> @Html.LabelFor(m => m.FinalMonthArrangementFee) : @Html.DisplayFor(m => m.FinalMonthArrangementFee)</p>
                </div>


                <ul class="breakdown">
                    <h2 class="breakdownHeader"> Payment Breakdown</h2>
                    <hr>

                    @foreach (var schedule in Model.PaymentDates)
                    {

                        <li>
                            <div class="payment">
                                <div class="month">
                                    <h5> Payment Date: @schedule.PaymentDate.ToString("dd/MM/yyyy")   </h5>
                                </div>
                                <div class="month">
                                    <h5> Payment Value: £ @schedule.PaymentValue</h5>

                                </div>

                                <hr>

                            </div>
                        </li>
                    }

                </ul>

            </div>
        }

    </div>


</div>




